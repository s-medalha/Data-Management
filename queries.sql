/* ============================================================
   Bookstore - Business Questions
   ============================================================ */
   
-- Top 10 best-selling books
-- This query identifies the 10 books with the highest number of units sold and total revenue, helping to highlight the most popular titles.

SELECT 
    b.Book_ID,
    b.Title,
    SUM(soi.Quantity) AS total_units_sold,
    SUM(soi.Quantity * soi.Unit_Price) AS total_revenue
FROM
    Sale_Order_Items AS soi 
        JOIN
    Book AS b ON b.Book_ID = soi.Book_ID
GROUP BY b.Book_ID , b.Title
ORDER BY total_units_sold DESC , total_revenue DESC
LIMIT 10;


------------------------------------------------------------------------------------------

-- Revenue by genre
-- This query analyzes which genres generate the highest revenue, helping the business understand customer preferences.

SELECT
  g.Genre_Name,
  SUM(soi.Quantity * soi.Unit_Price) AS revenue
  
FROM Sale_Order_Items AS soi

JOIN Book           AS b ON b.Book_ID   = soi.Book_ID
JOIN Genre          AS g ON g.Genre_ID  = b.Genre_ID

GROUP BY g.Genre_Name
ORDER BY revenue DESC;


------------------------------------------------------------------------------------------

-- Revenue by publisher (specific date range)
-- This query measures the revenue generated by each publisher between September 20 and October 9, 2025.

SELECT
  p.Publisher_Name,
  SUM(soi.Quantity * soi.Unit_Price) AS revenue
FROM Sale_Order_Items AS soi
JOIN Sale_Order      AS so ON so.Order_ID    = soi.Order_ID 
JOIN Book            AS b  ON b.Book_ID      = soi.Book_ID
JOIN Publisher       AS p  ON p.Publisher_ID = b.Publisher_ID
WHERE so.Order_Date BETWEEN '2025-09-20' AND '2025-10-09'
GROUP BY p.Publisher_Name
ORDER BY revenue DESC;

------------------------------------------------------------------------------------------

-- Average customer rating
-- This query calculates the overall average rating (from 1 to 5) based on customer survey responses.

SELECT 
  COUNT(Survey_ID) AS Responses,
  ROUND(AVG(Rating), 2) AS average_rating
FROM Survey_Response;

------------------------------------------------------------------------------------------
    
-- Average percentage of wishlist books purchased
-- This query calculates the average percentage of books purchased that were previously added to customers' wishlists,
-- showing how effectively customer interest converts into actual sales.
  
SELECT
  CONCAT( 
  ROUND( 100 * AVG(
		CASE 
          WHEN pc.wishlist > 0 
          THEN pc.purchased / pc.wishlist
        END), 2), '%') AS avg_items_purchased_wishlist
FROM (
  SELECT 
    c.Customer_ID,
    COUNT(distinct w.Book_ID) AS wishlist,
    SUM(
      CASE 
        WHEN (
          SELECT COUNT(*)
          FROM Sale_Order so 
          JOIN Sale_Order_Items soi 
            ON soi.Order_ID = so.Order_ID AND soi.Book_ID  = w.Book_ID
          WHERE so.Customer_ID = c.Customer_ID
			) THEN 1 ELSE 0
      END) AS purchased
  FROM Customer c
  LEFT JOIN Wishlist w 
         ON w.Customer_ID = c.Customer_ID
  GROUP BY c.Customer_ID
) AS pc;



